
(float x)
(int x)
(string x)
(format x)

sin
cos
tan






(define (x) (if (null? seq) init (f (car seq) (fold-right f init (cdr seq)))))





(define (sqrt-iter guess x) (if (good-enough? guess x) guess (sqrt-iter (improve guess x) x)))
(define (improve guess x) (average guess (/ x guess)))
(define (average x y) (/ (+ x y) 2))
(define (good-enough? guess x) (< (abs (- (square guess) x)) 0.001))
(sqrt-iter 16)


0. (define (sum x)
1:   (define (sum-iter x acc) (if (= x 0) acc (sum-iter (- x 1) (+ acc x))))
2:   (sum-iter x 0)
3: )

IDEAS

add coercion functions to the Expression base class?
demo the closure
require scope for an eval